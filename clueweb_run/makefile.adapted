# Makefile to generate TAC-response.
# Pipeline starts with query.xml and generates response.
#
# This produces a 2013 run merging the output from old and new modules.
#
# Author: Benjamin Roth

# copies query.xml from location specified in config file

#set bash
SHELL := /bin/bash

#1. Die features werden extrahiert:

# Converts candidates into protocol-buffer format.
candidates.pb: candidates
	$(TAC_ROOT)/components/bin/cands_to_proto.sh $+ $@
# Extracts features on a per-sentence level.
sfeatures: candidates.pb
	$(TAC_ROOT)/components/bin/sfeatures.sh $+ $@

#2. Die SVM macht die vorhersagen:

# Predicts slot fillers on a per-sentence level.
predictions_classifier: sfeatures
	$(TAC_ROOT)/components/bin/predictions.sh $+ $@

#3. Die vorhersagen werden passend formatiert:
# Adds expansiond to original queries and explicitly lists relations.
query_expanded.xml: query.xml
	$(TAC_ROOT)/components/bin/expand_query.sh $+ $@
# Generates TAC-response with 'lsv' team id.
response_classifier: query_expanded.xml predictions_classifier
	$(TAC_ROOT)/components/bin/response.sh $+ $@

#4a. Notwendig für nächsten Schritt (Michael)

# Response from matching query name expansions.
response_alternate_names: query_expanded.xml dtag dscore
	$(TAC_ROOT)/components/bin/alternate_names.sh $+ $@
# Runs candidates through dependency parser so they can be used by the dependency matcher.
candidates.parsed.pb:   candidates.pb
	$(TAC_ROOT)/components/bin/parse_candidates.sh $+ $@
# Response from dependency pattern matches.
response_dependency_patterns: query_expanded.xml candidates.parsed.pb
	$(TAC_ROOT)/components/bin/dependency_pattern_response.sh $+ $@
# Response from induced patterns.
response_induced_patterns: query_expanded.xml candidates
	$(TAC_ROOT)/components/bin/induced_pattern_response.sh $+ $@

#4. Die SVM response wird mit den anderen responses gemerget (patterns, etc)

# All modules. (3)
#response_all: query_expanded.xml response_alternate_names response_classifier response_dependency_patterns response_induced_patterns response_patterns response_wiki
response_all: query_expanded.xml response_classifier response_patterns
	$(TAC_ROOT)/components/bin/merge_responses.sh $+ > $@

# modules that run fast (1)
response_fast: query_expanded.xml response_alternate_names response_classifier response_induced_patterns response_patterns
	$(TAC_ROOT)/components/bin/merge_responses.sh $+ > $@


#5. Die gemergte response wird normalisiert ('postprocessed')

# Template for postprocessing responses for 2013 format
%_pp13: % query_expanded.xml /dev/null
	$(TAC_ROOT)/components/bin/postprocess2013.sh $+ $@

response: response_all_pp13
	cp -v $< $@ 

# My cleaning script
clean:
	rm -f candidates.pb query_expanded.xml response_classifier sfeatures

